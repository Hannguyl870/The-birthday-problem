<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>